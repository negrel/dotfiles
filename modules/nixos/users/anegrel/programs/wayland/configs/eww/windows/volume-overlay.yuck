(defwindow volume-overlay
  :monitor 0
  :geometry (geometry :x "0%"
                      :y "20%"
                      :anchor "bottom center")
  :stacking "overlay"
  (volume-overlay))

(defvar volume-mute false)
(defvar volume 10)
(defwidget volume-overlay []
  (box :class "volume-overlay scale-overlay"
       :orientation "v"
       :valign "center"
       :space-evenly false
    (icon :icon { volume-mute == "true" ? "" : 
                  volume == 00 ? "" :
                  volume <= 25 ? "" :
                  volume <= 75 ? "" : "" }
          :class "volume-icon ${ volume == 0 || volume-mute == "true" ? "mute" : "" }") 
    (scale :value { volume-mute == "true" ? 0 : volume }
           :min 0 :max 101 :onchange "volumectl set {}")))

; Micro
(defwindow volume-mic-overlay
  :monitor 0
  :geometry (geometry :x "0%"
                      :y "20%"
                      :anchor "bottom center")
  :stacking "overlay"
  (volume-mic-overlay))

(defvar volume-mic-mute false)
(defvar volume-mic "")
(defwidget volume-mic-overlay []
  (box :class "volume-mic-overlay scale-overlay"
       :orientation "v"
       :valign "center"
       :space-evenly false
    (icon :icon { volume-mic-mute == "true" ? "" : 
                  volume-mic == 00 ? "" : "" }
          :class "volume-mic-icon ${ volume-mic == 0 || volume-mic-mute == "true" ? "mute" : "" }") 
    (scale :value { volume-mic-mute == "true" ? 0 : volume-mic }
           :min 0 :max 101 :onchange "volumectl -i set {}")))

