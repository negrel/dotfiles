#!/usr/bin/env bash

set -euo pipefail
shopt -s inherit_errexit

print_help() {
	cat <<EOF
wmctl - Window manager / compositor control.
USAGE:
  wmctl [OPTION...] SUBCOMMAND

SUBCOMMAND:
  help                          print help menu
  monitor                       monitors specific commands
  workspace                     workspaces specific commands

OPTIONS:
  --debug                       enable debug logs
  -h, --help                    print help menu
EOF
}

while [ "$#" -gt "0" ]; do
	case "$1" in
		--debug)
			set -x
			shift
			;;

		--help|-h)
			print_help
			exit 0
			;;

		--)
			shift
			break
			;;

		-*)
			echo "unknown option: $1"
			exit 1
			;;

		*)
			break
			;;
	esac
done

get_stream_file() {
	echo "/tmp/wmctl"
}

get_stream_file_or_null() {
	local result
	result="$(get_stream_file)"
	if [ ! -f "$result" ]; then
		result="/dev/null"
	fi

	echo "$result"
}

main() {
	local cmd="${1:-""}"
	case "$cmd" in
		help)
			print_help
			exit 0
			;;

		monitor)
			shift
			monitor "$@"
			;;

		workspace)
			shift
			workspace "$@"
			;;

		stream)
			stream_file="$(get_stream_file)"

			true > "$stream_file"
			tail -F "$stream_file" 2> /dev/null
			;;

		*)
			echo "unknown command: $cmd"
			print_help
			exit 1
			;;
	esac
}

print_workspace_help() {
	cat <<EOF
wmctl workspace - Workspace manipulation.
USAGE:
  wmctl workspace [OPTION...]

SUBCOMMAND:
  help                          print help menu
  focus                         focus a workspace
  focused                       print focused workspace to stdout
  stream                        print a line to stdout every time focused workspace change
EOF
}

workspace() {
	local cmd="${1:-""}"
	case "$cmd" in
		help)
			shift
			print_workspace_help
			;;

		focused)
			shift
			swaymsg -t get_workspaces | jq -r '.[] | select(.focused) | .name'
			;;

		focus)
			shift
			swaymsg workspace "$1"
			stream_file="$(get_stream_file_or_null)"
			echo "workspace $1" >> "$stream_file"
			;;

		stream)
			stream_file="$(get_stream_file)"

			true > "$stream_file"
			tail -F "$stream_file" | grep "workspace" 2> /dev/null
			;;

		*)
			echo "unknown command: $cmd"
			print_workspace_help
			exit 1
			;;
	esac
}

print_monitor_help() {
	cat <<EOF
wmctl monitor - Workspace manipulation.
USAGE:
  wmctl monitor [OPTION...]

SUBCOMMAND:
  help                          print help menu
  focused                       print focused monitor to stdout
EOF
}

monitor() {
	local cmd="${1:-""}"
	case "$cmd" in
		help)
			shift
			print_monitor_help
			;;

		focused)
			swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name'
			shift
			;;

		*)
			echo "unknown command: $cmd"
			print_monitor_help
			exit 1
			;;
	esac
}

main "$@"
